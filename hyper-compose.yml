version: '2'

services:
  memcached:
    container_name: memcached
    image: memcached
    restart: always
    ports:
      - "11211:11211"

  postgres:
    container_name: postgres
    image: postgres
    size: m2
    restart: always
    env_file:
      - ./docker/postgres.env
      - ./docker/secrets.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    restart: always 
    env_file:
      - ./docker/rabbitmq.env
      - ./docker/secrets.env
    ports:
      - "5672:5672"

  nginx:
    container_name: nginx
    image: astrobin/nginx-${ENV}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    fip: auto
    links:
      - astrobin
    volumes:
      - ssl-certs:/etc/letsencrypt

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:2.4.6
    restart: always
    ports:
      - "9200:9200"

  celery:
    container_name: celery
    image: astrobin/astrobin
    command: celery worker -A astrobin -c 2
    links:
      - memcached
      - postgres
      - rabbitmq
    env_file:
      - ./docker/postgres.env
      - ./docker/astrobin.env
      - ./docker/secrets.env
    environment:
      - C_FORCE_ROOT=true
      - PYTHONPATH=/usr/lib/python2.7/dist-packages
      - DJANGO_SETTINGS_MODULE=astrobin.settings

  astrobin:
    container_name: astrobin
    image: astrobin/astrobin
    size: m2
    restart: always
    links:
      - memcached
      - postgres
      - rabbitmq
      - elasticsearch
    env_file:
      - ./docker/postgres.env
      - ./docker/astrobin.env
      - ./docker/secrets.env
    environment:
      - PYTHONPATH=/usr/lib/python2.7/dist-packages
      - DJANGO_SETTINGS_MODULE=astrobin.settings
    ports:
      - "8083:8083"

volumes:
  postgres-data: {}
  ssl-certs: {}
