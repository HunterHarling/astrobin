# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2017-10-17 12:19
from __future__ import unicode_literals

import django.core.files.storage
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import rawdata.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('astrobin', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PrivateSharedFolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(
                    help_text='A name for this folder. Be descriptive, so that the folder can be quickly recognized by the name.',
                    max_length=128, verbose_name='Name')),
                ('description',
                 models.TextField(help_text='Describe the goals of this folder.', verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='PublicDataPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(
                    help_text='A public name for this pool. Be descriptive, include the name of the celestial object and a target focal length in millimeters.',
                    max_length=128, unique=True, verbose_name='Name')),
                ('description',
                 models.TextField(help_text='Describe the goals and terms of this pool.', verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='RawImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file',
                 models.FileField(storage=django.core.files.storage.FileSystemStorage(location=b'/rawdata/files'),
                                  upload_to=rawdata.models.upload_path)),
                ('file_hash', models.CharField(editable=False, max_length=32, null=True)),
                ('original_filename', models.CharField(editable=False, max_length=256, null=True)),
                ('original_path', models.CharField(editable=False, max_length=512, null=True)),
                ('size', models.IntegerField(default=0, editable=False)),
                ('uploaded', models.DateTimeField(auto_now_add=True, null=True)),
                ('indexed', models.BooleanField(default=False, editable=False)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('image_type', models.IntegerField(
                    choices=[(0, 'Unknown'), (1, 'Light'), (2, 'Offset/Bias'), (3, 'Dark'), (4, 'Flat')], default=0,
                    editable=False, max_length=1)),
                ('acquisition_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('camera', models.CharField(blank=True, editable=False, max_length=128, null=True)),
                ('telescopeName', models.CharField(blank=True, editable=False, max_length=128, null=True)),
                ('filterName', models.CharField(blank=True, editable=False, max_length=128, null=True)),
                ('subjectName', models.CharField(blank=True, editable=False, max_length=128, null=True)),
                ('temperature', models.SmallIntegerField(blank=True, editable=False, null=True)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-uploaded',),
            },
        ),
        migrations.CreateModel(
            name='TemporaryArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location=b'/var/www'),
                                          upload_to=rawdata.models.temporary_download_upload_path)),
                ('size', models.IntegerField(default=0, editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('ready', models.BooleanField(default=False, editable=False)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='publicdatapool',
            name='archive',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='rawdata.TemporaryArchive'),
        ),
        migrations.AddField(
            model_name='publicdatapool',
            name='creator',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='publicdatapool',
            name='images',
            field=models.ManyToManyField(null=True, to='rawdata.RawImage'),
        ),
        migrations.AddField(
            model_name='publicdatapool',
            name='processed_images',
            field=models.ManyToManyField(null=True, to='astrobin.Image'),
        ),
        migrations.AddField(
            model_name='privatesharedfolder',
            name='archive',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='rawdata.TemporaryArchive'),
        ),
        migrations.AddField(
            model_name='privatesharedfolder',
            name='creator',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='privatesharedfolders_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='privatesharedfolder',
            name='images',
            field=models.ManyToManyField(blank=True, null=True, to='rawdata.RawImage'),
        ),
        migrations.AddField(
            model_name='privatesharedfolder',
            name='processed_images',
            field=models.ManyToManyField(blank=True, null=True, to='astrobin.Image'),
        ),
        migrations.AddField(
            model_name='privatesharedfolder',
            name='users',
            field=models.ManyToManyField(related_name='privatesharedfolders_invited', to=settings.AUTH_USER_MODEL),
        ),
    ]
