# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2018-12-09 14:57
from __future__ import unicode_literals

import astrobin_apps_equipment.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Name')),
                ('website', models.URLField(help_text='The official website of this brand', unique=True, verbose_name='Website')),
                ('logo', models.ImageField(upload_to=astrobin_apps_equipment.utils.brand_logo_upload_to)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('moderation_status', models.CharField(choices=[(b'PENDING', 'Pending'), (b'REJECTED', 'Rejected'), (b'APPROVED', 'Approved')], default=b'PENDING', editable=False, max_length=8)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='equipment_brands_created', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='equipment_brands_moderated', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('website', models.URLField(help_text='The official website of this equipment item', null=True, verbose_name='Website')),
                ('photo', models.ImageField(upload_to=astrobin_apps_equipment.utils.equipment_item_photo_upload_to)),
                ('category', models.CharField(choices=[(b'OPTICAL', 'Optical system'), (b'DETECTOR', 'Light detector'), (b'TRACKER', 'Target tracker'), (b'ACCESSORY', 'Accessory'), (b'SOFTWARE', 'Software')], help_text='The broad category that best defines this item.', max_length=32, verbose_name='Category')),
                ('subcategory', models.CharField(choices=[(b'OPTICAL_TELESCOPE', 'Telescope'), (b'OPTICAL_CAMERA_LENS', 'Camera lens'), (b'OPTICAL_FOCAL_REDUCER', 'Focal reducer'), (b'OPTICAL_DIAGONAL', 'Diagonal'), (b'OPTICAL_FIELD_CORRECTOR', 'Field corrector'), (b'OPTICAL_EYEPIECE', 'Eyepiece'), (b'OPTICAL_FILTER_L', 'Luminance filter'), (b'OPTICAL_FILTER_R', 'Red filter'), (b'OPTICAL_FILTER_G', 'Green filter'), (b'OPTICAL_FILTER_B', 'Blue filter'), (b'OPTICAL_FILTER_HA', 'Hydrogen Alpha filter'), (b'OPTICAL_FILTER_SII', 'Sulfur II filter'), (b'OPTICAL_FILTER_OIII', 'Oxygen III filter'), (b'OPTICAL_FILTER_LP', 'Light pollution filter'), (b'OPTICAL_FILTER_SOLAR', 'Solar filter'), (b'OPTICAL_FILTER_LUNAR', 'Lunar filter'), (b'DETECTOR_CCD', 'CCD camera'), (b'DETECTOR_DSLR', 'DSLR camera'), (b'DETECTOR_MIRRORLESS', 'Mirrorless camera'), (b'DETECTOR_FILM', 'Film camera'), (b'DETECTOR_GUIDER', 'Guide camera'), (b'TRACKER_EQ_MOUNT', 'Equatorial mount'), (b'TRACKER_ALTAZ_MOUNT', 'Alt-azimuth mount'), (b'TRACKER_BARN_DOOR', 'Barn door tracker'), (b'TRACKER_TRIPOD', 'Tripod'), (b'TRACKER_PIER', 'Pier'), (b'ACCESSORY_ADAPTER', 'Adapter'), (b'ACCESSORY_FOCUS_MASK', 'Focus mask'), (b'ACCESSORY_FOCUSER', 'Focuser'), (b'ACCESSORY_ARTIFICIAL_FLAT_FIELD', 'Artificial flat field'), (b'ACCESSORY_DEW_CONTROL', 'Dew control'), (b'ACCESSORY_FILTER_WHEEL', 'Filter wheel'), (b'ACCESSORY_INTERVALOMETER', 'Intervalometer'), (b'ACCESSORY_WEATHER_STATION', 'Weather station'), (b'SOFTWARE_OBSERVATORY_CONTROL', 'Observatory control'), (b'SOFTWARE_DATA_ACQUISITION', 'Data acquisition'), (b'SOFTWARE_DATA_PROCESSING', 'Data processing')], help_text='The subcategory that best defines this item.', max_length=64, verbose_name='Subcategory')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('moderation_status', models.CharField(choices=[(b'PENDING', 'Pending'), (b'REJECTED', 'Rejected'), (b'APPROVED', 'Approved')], default=b'PENDING', editable=False, max_length=8)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='astrobin_apps_equipment.Brand')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_items_created', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='equipment_items_moderated', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['brand', 'name'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='equipmentitem',
            unique_together=set([('brand', 'name')]),
        ),
    ]
