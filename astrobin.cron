# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
MAILTO=info@astrobin.com
ASTROBIN_ROOT=/var/www/astrobin
PYTHON=venv/production/bin/python
TMPZIPS=/var/www/tmpzips

0 */12 * * * (. $ASTROBIN_ROOT/env/production; $PYTHON $ASTROBIN_ROOT/manage.py update_index --remove) 2>&1 >/dev/null
#59 23 * * 6 ($PYTHON $ASTROBIN_ROOT/manage.py lacking_data_reminder) 2>&1 >/dev/null
05 00 * * * (. $ASTROBIN_ROOT/env/production; $PYTHON $ASTROBIN_ROOT/manage.py image_of_the_day) 2>&1 >/dev/null
10 00 * * * (. $ASTROBIN_ROOT/env/production; $PYTHON $ASTROBIN_ROOT/manage.py merge_gear) 2>&1 >/dev/null
30 00 * * * (. $ASTROBIN_ROOT/env/production; $PYTHON $ASTROBIN_ROOT/manage.py global_stats) 2>&1 >/dev/null
00 11 * * * (. $ASTROBIN_ROOT/env/production; $PYTHON $ASTROBIN_ROOT/manage.py clean_temporary_archives) 2>&1 >/dev/null
