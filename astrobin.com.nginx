upstream app_server {
    server 127.0.0.1:8082 fail_timeout=0;
}

server {
        listen   80;
        server_name astrob.in;
        rewrite ^/(.*) http://www.astrobin.com/$1 permanent;
}

server {
        listen   80;
        server_name www.astrob.in;
        rewrite ^/(.*) http://www.astrobin.com/$1 permanent;
}

server {
        listen   80;
        server_name astrobin.com;
        rewrite ^/(.*) http://www.astrobin.com/$1 permanent;
}

server {
    listen 80 default;
    client_max_body_size 4G;
    server_name www.astrobin.com;

    rewrite ^/notices/$ /notifications permanent;

    access_log /var/log/nginx/astrobin.com-access.log;
    error_log /var/log/nginx/astrobin.com-error.log;

    keepalive_timeout 5;
    proxy_read_timeout 1200;

    ## Compression
    # src: http://www.ruby-forum.com/topic/141251
    # src: http://wiki.brightbox.co.uk/docs:nginx

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_min_length  1100;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Some version of IE 6 don't handle compression well on some mime-types, so just disable for them
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    
    # Set a vary header so downstream proxies don't send cached gzipped content to IE6
    gzip_vary on;
    ## /Compression

    location /sitestatic/  {
        root /webserver/www;
        expires 30d;
    }

    location /media/  {
        root /webserver/www;
        expires 30d;
    }

    location /uploads/  {
        root /webserver/www/;
        expires 90d;
    }

    location / {
        if ($request_uri ~* "^/robots.txt") {
            rewrite ^/robots.txt /sitestatic/robots.txt permanent;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://app_server;
            break;
        }
    }

    location /favicon.ico {
        root /webserver/www/sitestatic;
        expires max;
    }

    # internal publish endpoint (keep it private / protected)
    #location /publish {
    #    set $push_channel_id $arg_id;      #/?id=239aff3 or somesuch
    #    push_publisher;
    #
    #    push_store_messages off;           # disable message queueing 
    #    push_message_timeout 0;            # never expire buffer messages
    #    push_message_buffer_length 0;      # don't store messages
    #    #push_min_message_recipients 0;    # minimum recipients before purge
    #}

    # public long-polling endpoint
    #location /activity {
    #    push_subscriber;
    #
        # how multiple listener requests to the same channel id are handled
        # - last: only the most recent listener request is kept, 409 for others.
        # - first: only the oldest listener request is kept, 409 for others.
        # - broadcast: any number of listener requests may be long-polling.
    #    push_subscriber_concurrency first;
    #    set $push_channel_id $arg_id;
    #    default_type  text/plain;
    #} 
}

server {
    server_name translate.astrobin.com;
      
    location ^~ /html/ {
        root /webserver/pootle/;
	expires 30d;
    }

    location / {
        fastcgi_pass 127.0.0.1:8084;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param DOCUMENT_URI $document_uri;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_param SERVER_PROTOCOL $server_protocol;
        fastcgi_param REMOTE_ADDR $remote_addr;
        fastcgi_param REMOTE_PORT $remote_port;
        fastcgi_param SERVER_ADDR $server_addr;
        fastcgi_param SERVER_PORT $server_port;
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_pass_header Authorization;
        fastcgi_intercept_errors off;
        fastcgi_read_timeout 1200;
    }
}


upstream questions_app_server {
    server 127.0.0.1:8083 fail_timeout=0;
}

server {
    client_max_body_size 2M;
    server_name questions.astrobin.com;

    access_log /var/log/nginx/questions.astrobin.com-access.log;
    error_log /var/log/nginx/questions.astrobin.com-error.log;

    keepalive_timeout 10;
    proxy_read_timeout 300;

    ## Compression
    # src: http://www.ruby-forum.com/topic/141251
    # src: http://wiki.brightbox.co.uk/docs:nginx

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_min_length  1100;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Some version of IE 6 don't handle compression well on some mime-types, so just disable for them
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    
    # Set a vary header so downstream proxies don't send cached gzipped content to IE6
    gzip_vary on;
    ## /Compression

    location /static/ {
        root /webserver/questions;
        expires 30d;
    }

    location / {
        if ($request_uri ~* "^/robots.txt") {
            rewrite ^/robots.txt /static/robots.txt permanent;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://questions_app_server;
            break;
        }
    }
}

